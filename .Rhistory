getwd()
usethis::use_data_raw("nitrateproxy")
# ---- setup ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# 1) Point to the parent folder that contains the monthly NEON folders
# e.g. "D:/.../waq_nitrate_analysis/raw" or wherever your NEON.D02.LEWI.DP1.20033.001.2023-01.basic... folders live
base_dir <- "C:/Users/MY PC/Downloads/NEON_nitrate-surfacewater"
sites <- c("ARIK","CARI","LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# 2) Get all monthly folders that match the 3 sites & 2023 months for product DP1.20033.001
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20033\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# 3) In each folder, pick the single needed file:
#    NEON.Dxx.SITE.DP1.20033.001.102.100.015.NSW_15_minute.2023-MM.basic.<timestamp>.csv
pick_nsw_file <- function(folder) {
files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# If more than one, choose the lexicographically last (usually the newest timestamp)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# 4) Extract site and year-month from the folder name (robust to D02/D10/D19 etc.)
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[,2],
year_month = meta[,3]
)
# 5) Read all CSVs and bind rows; add site & year_month columns
read_one <- function(path, site, ym) {
# readr::read_csv handles big files efficiently
# If NEON has weird column types, set guess_max higher
df <- read_csv(path, show_col_types = FALSE, guess_max = 100000)
df %>% mutate(site = site, year_month = ym, .before = 1)
}
combined_2023 <- map2_dfr(picked_tbl$file, picked_tbl$site, ~.x) %>%
# map2 needs both site and ym; use pmap for clarity:
{ pmap_dfr(list(picked_tbl$file, picked_tbl$site, picked_tbl$year_month),
~ read_one(..1, ..2, ..3)) }
View(picked_tbl)
# ---- Load required packages ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# ---- 1. Define base directory ----
# Replace with your actual path containing the NEON folders
# (the parent directory of folders like NEON.D02.LEWI.DP1.20033.001.2023-01.basic...)
base_dir <- "D:/path/to/your/NEON_download_root"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. Find all monthly folders for 2023 and 3 sites ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start of folder path
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20033\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single “NSW_15_minute” CSV in each folder ----
pick_nsw_file <- function(folder) {
files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and year-month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Define helper to read one CSV and tag with site + month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs into one dataframe ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
# ---- 7. Quick check and summary ----
combined_2023 %>%
count(site, year_month) %>%
arrange(site, year_month) %>%
print(n = Inf)
View(combined_2023)
# ---- Load required packages ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# ---- 1. Define base directory ----
# Replace with your actual path containing the NEON folders
# (the parent directory of folders like NEON.D02.LEWI.DP1.20033.001.2023-01.basic...)
base_dir <- "D:/path/to/your/NEON_download_root"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. Find all monthly folders for 2023 and 3 sites ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start of folder path
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20033\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single “NSW_15_minute” CSV in each folder ----
pick_nsw_file <- function(folder) {
files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and year-month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Define helper to read one CSV and tag with site + month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs into one dataframe ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
# ---- Load required packages ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# ---- 1. Define base directory ----
# Replace with your actual path containing the NEON folders
# (the parent directory of folders like NEON.D02.LEWI.DP1.20033.001.2023-01.basic...)
base_dir <- "C:/Users/MY PC/Downloads/NEON_nitrate-surfacewater"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. Find all monthly folders for 2023 and 3 sites ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start of folder path
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20033\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single “NSW_15_minute” CSV in each folder ----
pick_nsw_file <- function(folder) {
files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and year-month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Define helper to read one CSV and tag with site + month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs into one dataframe ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
View(combined_2023)
str(combined_2023)
library(dplyr)
library(lubridate)
combined_clean <- combined_2023 %>%
mutate(
# extract numeric month from startDateTime
month = month(startDateTime, label = TRUE, abbr = TRUE)  # e.g. Jan, Feb, ...
) %>%
select(site, month, surfWaterNitrateMean)
View(combined_clean)
library(dplyr)
library(lubridate)
nitrate_combined_clean <- combined_2023 %>%
mutate(
# extract numeric month from startDateTime
month = month(startDateTime, label = TRUE, abbr = TRUE)  # e.g. Jan, Feb, ...
) %>%
select(site, month, surfWaterNitrateMean)
# ---- Load required packages ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
library(lubridate)
# ---- 1. Define base directory ----
# Replace with your actual path containing the NEON folders
# (the parent directory of folders like NEON.D02.LEWI.DP1.20033.001.2023-01.basic...)
base_dir <- "C:/Users/MY PC/Downloads/NEON_nitrate-surfacewater"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. Find all monthly folders for 2023 and 3 sites ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start of folder path
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20033\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single “NSW_15_minute” CSV in each folder ----
pick_nsw_file <- function(folder) {
files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and year-month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Define helper to read one CSV and tag with site + month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs into one dataframe ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
# ----Tidy format ----
nitrate_combined_clean <- combined_2023 %>%
mutate(
# extract numeric month from startDateTime
month = month(startDateTime, label = TRUE, abbr = TRUE)  # e.g. Jan, Feb, ...
) %>%
select(site, month, surfWaterNitrateMean)
# ---- 1. Define your base folder ----
base_dir <- "C:/Users/MY PC/Downloads/NEON_temp-surfacewater"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. List all subfolders for DP1.20053.001 ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20053\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single needed 30-min TSW CSV in each folder ----
pick_tsw_file <- function(folder) {
files <- list.files(folder,
pattern = "TSW_30min\\.2023-\\d{2}\\.basic\\..*\\.csv$",
full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_tsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20053\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Helper to read one CSV and tag site/month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_TSW_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
View(combined_TSW_2023)
str(combined_TSW_2023)
# ---- 1. Define your base folder ----
base_dir <- "C:/Users/MY PC/Downloads/NEON_temp-surfacewater"
# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)
# ---- 2. List all subfolders for DP1.20053.001 ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)
dir_match <- all_dirs[grepl(
paste0(
"^",                          # start
".*/NEON\\.D\\d{2}\\.",
"(", paste(sites, collapse="|"), ")",
"\\.DP1\\.20053\\.001\\.",
"(", paste(months_2023, collapse="|"), ")",
"\\.basic\\."
),
all_dirs
)]
# ---- 3. Pick the single needed 30-min TSW CSV in each folder ----
pick_tsw_file <- function(folder) {
files <- list.files(folder,
pattern = "TSW_30min\\.2023-\\d{2}\\.basic\\..*\\.csv$",
full.names = TRUE)
if (length(files) == 0) return(NA_character_)
# choose the most recent timestamp (lexicographically last)
files[order(files, decreasing = TRUE)][1]
}
picked_files <- map_chr(dir_match, pick_tsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
filter(!is.na(file))
# ---- 4. Extract site and month from folder names ----
meta <- str_match(
picked_tbl$folder,
"NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20053\\.001\\.(2023-\\d{2})\\.basic\\."
)
picked_tbl <- picked_tbl %>%
mutate(
site = meta[, 2],
year_month = meta[, 3]
)
# ---- 5. Helper to read one CSV and tag site/month ----
read_one <- function(path, site, ym) {
read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
mutate(site = site, year_month = ym, .before = 1)
}
# ---- 6. Combine all monthly CSVs ----
picked_tbl <- picked_tbl %>%
filter(!is.na(file), file.exists(file)) %>%
select(file, site, year_month)
combined_TSW_2023 <- pmap_dfr(
picked_tbl,
function(file, site, year_month) read_one(file, site, year_month)
)
# --- 7. Tidy format ---
combined_TSW_clean <- combined_TSW_2023 %>%
mutate(
# extract month name (Jan–Dec) from timestamp
month = month(startDateTime, label = TRUE, abbr = TRUE)
) %>%
select(site, month, surfWaterTempMean)
View(combined_TSW_clean)
write_csv(combined_clean, "data-raw/nitrate_tidy.csv")
write_csv(combined_TSW_clean, "data-raw/temp_tidy.csv")
