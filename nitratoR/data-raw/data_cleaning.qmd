---
title: "data cleaning"
format: html
editor: visual
---

```{r}
# ---- Load required packages ----
library(stringr)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
library(lubridate)

# ---- 1. Define base directory ----
# Replace with your actual path containing the NEON folders
# (the parent directory of folders like NEON.D02.LEWI.DP1.20033.001.2023-01.basic...)
base_dir <- "C:/Users/MY PC/Downloads/NEON_nitrate-surfacewater"

# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)

# ---- 2. Find all monthly folders for 2023 and 3 sites ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)

dir_match <- all_dirs[grepl(
  paste0(
    "^",                          # start of folder path
    ".*/NEON\\.D\\d{2}\\.",
    "(", paste(sites, collapse="|"), ")",
    "\\.DP1\\.20033\\.001\\.",
    "(", paste(months_2023, collapse="|"), ")",
    "\\.basic\\."
  ),
  all_dirs
)]

# ---- 3. Pick the single “NSW_15_minute” CSV in each folder ----
pick_nsw_file <- function(folder) {
  files <- list.files(folder, pattern = "NSW_15_minute\\.2023-\\d{2}\\.basic\\..*\\.csv$", full.names = TRUE)
  if (length(files) == 0) return(NA_character_)
  # choose the most recent timestamp (lexicographically last)
  files[order(files, decreasing = TRUE)][1]
}

picked_files <- map_chr(dir_match, pick_nsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
  filter(!is.na(file))

# ---- 4. Extract site and year-month from folder names ----
meta <- str_match(
  picked_tbl$folder,
  "NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20033\\.001\\.(2023-\\d{2})\\.basic\\."
)

picked_tbl <- picked_tbl %>%
  mutate(
    site = meta[, 2],
    year_month = meta[, 3]
  )

# ---- 5. Define helper to read one CSV and tag with site + month ----
read_one <- function(path, site, ym) {
  read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
    mutate(site = site, year_month = ym, .before = 1)
}

# ---- 6. Combine all monthly CSVs into one dataframe ----
picked_tbl <- picked_tbl %>%
  filter(!is.na(file), file.exists(file)) %>%
  select(file, site, year_month)

combined_2023 <- pmap_dfr(
  picked_tbl,
  function(file, site, year_month) read_one(file, site, year_month)
)


# ----Tidy format ----
nitrate_combined_clean <- combined_2023 %>%
  mutate(
    # extract numeric month from startDateTime
    month = month(startDateTime, label = TRUE, abbr = TRUE)  # e.g. Jan, Feb, ...
  ) %>%
  select(site, month, surfWaterNitrateMean)


```

```{r}
# ---- 1. Define your base folder ----
base_dir <- "C:/Users/MY PC/Downloads/NEON_temp-surfacewater"

# Sites and months of interest
sites <- c("ARIK", "CARI", "LEWI")
months_2023 <- sprintf("2023-%02d", 1:12)

# ---- 2. List all subfolders for DP1.20053.001 ----
all_dirs <- list.dirs(base_dir, recursive = FALSE, full.names = TRUE)

dir_match <- all_dirs[grepl(
  paste0(
    "^",                          # start
    ".*/NEON\\.D\\d{2}\\.",
    "(", paste(sites, collapse="|"), ")",
    "\\.DP1\\.20053\\.001\\.",
    "(", paste(months_2023, collapse="|"), ")",
    "\\.basic\\."
  ),
  all_dirs
)]

# ---- 3. Pick the single needed 30-min TSW CSV in each folder ----
pick_tsw_file <- function(folder) {
  files <- list.files(folder,
                      pattern = "TSW_30min\\.2023-\\d{2}\\.basic\\..*\\.csv$",
                      full.names = TRUE)
  if (length(files) == 0) return(NA_character_)
  # choose the most recent timestamp (lexicographically last)
  files[order(files, decreasing = TRUE)][1]
}

picked_files <- map_chr(dir_match, pick_tsw_file)
picked_tbl <- tibble(folder = dir_match, file = picked_files) %>%
  filter(!is.na(file))

# ---- 4. Extract site and month from folder names ----
meta <- str_match(
  picked_tbl$folder,
  "NEON\\.D\\d{2}\\.(\\w{4})\\.DP1\\.20053\\.001\\.(2023-\\d{2})\\.basic\\."
)

picked_tbl <- picked_tbl %>%
  mutate(
    site = meta[, 2],
    year_month = meta[, 3]
  )

# ---- 5. Helper to read one CSV and tag site/month ----
read_one <- function(path, site, ym) {
  read_csv(path, show_col_types = FALSE, guess_max = 100000) %>%
    mutate(site = site, year_month = ym, .before = 1)
}

# ---- 6. Combine all monthly CSVs ----
picked_tbl <- picked_tbl %>%
  filter(!is.na(file), file.exists(file)) %>%
  select(file, site, year_month)

combined_TSW_2023 <- pmap_dfr(
  picked_tbl,
  function(file, site, year_month) read_one(file, site, year_month)
)

# --- 7. Tidy format ---
combined_TSW_clean <- combined_TSW_2023 %>%
  mutate(
    # extract month name (Jan–Dec) from timestamp
    month = month(startDateTime, label = TRUE, abbr = TRUE)
  ) %>%
  select(site, month, surfWaterTempMean)
```
